{
  "version": 3,
  "sources": ["../src/index-esm.ts", "../src/core/singly-linked-list.ts"],
  "sourcesContent": ["export * from './core/singly-linked-list';", "import { ISinglyLinkedListNode } from '../interfaces';\n\nexport const reverseSinglyLinkedList = (head: ISinglyLinkedListNode|null) : ISinglyLinkedListNode|null => {\n\n    let node: ISinglyLinkedListNode|null = head;\n    let prev: ISinglyLinkedListNode|null = null;\n\n    while(node) {\n\n        // Save next node to use it later (or you lose it).\n        const next: ISinglyLinkedListNode|null = node.next;\n\n        // Reverse the pointer.\n        node.next = prev;\n\n        // Increment previous to the current node.\n        prev = node;\n\n        // Increment node to next node or null at end of list.\n        node = next;\n    }\n\n    // Return the new head.\n    return prev;\n};"],
  "mappings": ";;;;;;4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,6BAAAE,IAAA,eAAAC,EAAAH,GCEO,IAAMI,EAA2BC,GAAkE,CAEtG,IAAIC,EAAmCD,EACnCE,EAAmC,KAEvC,KAAMD,GAAM,CAGR,IAAME,EAAmCF,EAAK,KAG9CA,EAAK,KAAOC,EAGZA,EAAOD,EAGPA,EAAOE,CACX,CAGA,OAAOD,CACX",
  "names": ["index_esm_exports", "__export", "reverseSinglyLinkedList", "__toCommonJS", "reverseSinglyLinkedList", "head", "node", "prev", "next"]
}
